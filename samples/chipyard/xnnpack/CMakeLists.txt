# # SPDX-License-Identifier: Apache-2.0

cmake_minimum_required(VERSION 3.20.0)

set(XNNPACK_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../third-party/XNNPACK)

find_package(Zephyr REQUIRED HINTS $ENV{ZEPHYR_BASE})
project(xnnpack)


set(XNNPACK_ENABLE_RISCV_VECTOR OFF CACHE BOOL "Build XNNPACK with RISC-V Vector micro-kernels")
set(XNNPACK_BUILD_TESTS OFF CACHE BOOL "Build XNNPack unit tests")
set(XNNPACK_BUILD_BENCHMARKS OFF CACHE BOOL "Build XNNPack benchmarks")

add_subdirectory(${XNNPACK_DIR} xnnpack_build)


target_include_directories(pthreadpool PUBLIC $<TARGET_PROPERTY:app,INTERFACE_INCLUDE_DIRECTORIES>)
target_compile_options(pthreadpool PUBLIC $<TARGET_PROPERTY:app,INTERFACE_COMPILE_OPTIONS>)
target_compile_definitions(pthreadpool PUBLIC $<TARGET_PROPERTY:app,INTERFACE_COMPILE_DEFINITIONS>)
add_dependencies(pthreadpool zephyr_interface)
add_dependencies(pthreadpool zephyr_property_target)
# target_include_directories(XNNPACK PUBLIC /scratch/jinshengxu/.local/riscv/riscv64-unknown-elf/include/)
# target_include_directories(XNNPACK PUBLIC $<TARGET_PROPERTY:app,INTERFACE_INCLUDE_DIRECTORIES>)
# target_compile_options(XNNPACK PUBLIC $<TARGET_PROPERTY:app,INTERFACE_COMPILE_OPTIONS>)
# target_compile_options(XNNPACK PUBLIC -g)
# target_compile_definitions(XNNPACK PUBLIC $<TARGET_PROPERTY:app,INTERFACE_COMPILE_DEFINITIONS>)
# add_dependencies(XNNPACK zephyr_interface)
# add_dependencies(XNNPACK zephyr_property_target)





include_directories(${XNNPACK_DIR}/include)
target_link_libraries(app PRIVATE XNNPACK pthreadpool)
target_sources(app PRIVATE src/main.c)